#!/bin/bash

###
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ë–î —Å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–µ–π
###

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è..."
docker compose exec -T mongos_router mongosh --port 27020 --quiet <<EOF
sh.addShard("shard1/shard1-1:27018,shard1-2:27018,shard1-3:27018");
sh.addShard("shard2/shard2-1:27019,shard2-2:27019,shard2-3:27019");
sh.enableSharding("somedb");
sh.shardCollection("somedb.helloDoc", { "name" : "hashed" });
EOF

echo "üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
docker compose exec -T mongos_router mongosh --port 27020 --quiet <<EOF
use somedb
for(var i = 0; i < 1000; i++) db.helloDoc.insertOne({age:i, name:"ly"+i})
EOF

echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
echo "üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:"
docker compose exec -T mongos_router mongosh --port 27020 --quiet <<EOF
use somedb
db.helloDoc.countDocuments()
EOF

echo "üìä –î–æ–∫—É–º–µ–Ω—Ç—ã –≤ Shard 1 (Primary —É–∑–µ–ª):"
docker compose exec -T shard1-1 mongosh --port 27018 --quiet <<EOF
use somedb
db.helloDoc.countDocuments()
EOF

echo "üìä –î–æ–∫—É–º–µ–Ω—Ç—ã –≤ Shard 2 (Primary —É–∑–µ–ª):"
docker compose exec -T shard2-1 mongosh --port 27019 --quiet <<EOF
use somedb
db.helloDoc.countDocuments()
EOF

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –≤ Shard 1 (Secondary —É–∑–µ–ª):"
docker compose exec -T shard1-2 mongosh --port 27018 --quiet <<EOF
rs.secondaryOk()
use somedb
db.helloDoc.countDocuments()
EOF

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –≤ Shard 2 (Secondary —É–∑–µ–ª):"
docker compose exec -T shard2-2 mongosh --port 27019 --quiet <<EOF
rs.secondaryOk()
use somedb
db.helloDoc.countDocuments()
EOF

echo "üìã –°—Ç–∞—Ç—É—Å Replica Sets:"
echo "Config Server RS:"
docker compose exec -T configSrv-1 mongosh --port 27017 --quiet <<EOF
rs.status().members.forEach(m => print(m.name + " - " + m.stateStr))
EOF

echo "Shard 1 RS:"
docker compose exec -T shard1-1 mongosh --port 27018 --quiet <<EOF
rs.status().members.forEach(m => print(m.name + " - " + m.stateStr))
EOF

echo "Shard 2 RS:"
docker compose exec -T shard2-1 mongosh --port 27019 --quiet <<EOF
rs.status().members.forEach(m => print(m.name + " - " + m.stateStr))
EOF

echo "üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ —à–∞—Ä–¥–∞–º —Å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–µ–π."
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:8080"
echo "üìä API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: http://localhost:8080/docs"
echo ""
echo "üîß Redis –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:"
echo "‚Ä¢ GET /helloDoc/users - –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –Ω–∞ 60 —Å–µ–∫—É–Ω–¥"
echo "‚Ä¢ GET /helloDoc/users/{name} - –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –Ω–∞ 60 —Å–µ–∫—É–Ω–¥"
echo ""
echo "üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–µ—à–∞:"
echo "time curl http://localhost:8080/helloDoc/users  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (Cache Miss)"
echo "time curl http://localhost:8080/helloDoc/users  # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å (Cache Hit <100–º—Å)"